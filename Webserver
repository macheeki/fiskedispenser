import socket
from HTML import web_page
from DCmotor import *
from machine import Timer, Pin
from time_sync import getTimer
import time

setTimer = Timer(-1)
actTimer = Timer(-1)
blinkTimer = Timer(-1)


LED = Pin("LED", Pin.OUT)

def blink(t):
    print(t)
    LED.value(not LED.value())

def setDailyBlink(t):
    print(t)
    actTimer.init(mode=Timer.PERIODIC, period= 30*1000, callback=blink)



def setDailyRutine(t):
    print(t)
    run_motor("test")
    actTimer.init(mode=Timer.PERIODIC, period= 60*60*24*1000, callback=run_motor)



def start_server():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind(('', 80))
    s.listen(5)
    print('Webserver kører og lytter på port 80')

    while True:
        conn, addr = s.accept()
        request = conn.recv(1024)
        conn.settimeout(None)
        request = str(request)
        fiveSec = request.find("/5sec")
        kl12 = request.find("/12-00")
        kl16 = request.find("/16-00")
        kl17_23 = request.find("/17-23")


        """if '/start_motor' in request:
            run_motor()"""
        if fiveSec == 6:
            actTimer.init(mode=Timer.ONE_SHOT, period= 5 * 1000, callback= run_motor)

        if kl12 == 6:
            timeNow = getTimer().datetime()
            timeAmount = (timeNow[6] + (timeNow[5] * 60) + (timeNow[4] * 60 * 24)) * 1000
            targetTime = [12,0,0]
            diff = ((targetTime[2]+(targetTime[1]*60)+(targetTime[0]*60*24))*1000)-timeAmount
            setTimer.init(mode=Timer.ONE_SHOT, period=diff, callback=setDailyRutine)

        if kl16 == 6:
            timeNow = getTimer().datetime()
            timeAmount = (timeNow[6] + (timeNow[5] * 60) + (timeNow[4] * 60 * 24)) * 1000
            targetTime = [16, 0, 0]
            diff = ((targetTime[2] + (targetTime[1] * 60) + (targetTime[0] * 60 * 24)) * 1000) - timeAmount
            setTimer.init(mode=Timer.ONE_SHOT, period=diff, callback=setDailyRutine)

        if kl17_23 == 6:
            timeNow = getTimer().datetime()
            timeAmount = (timeNow[6] + (timeNow[5] * 60) + (timeNow[4] * 60 * 24)) * 1000
            targetTime = [17, 24, 0]
            diff = ((targetTime[2] + (targetTime[1] * 60) + (targetTime[0] * 60 * 24)) * 1000) - timeAmount
            setTimer.init(mode=Timer.ONE_SHOT, period=diff, callback=setDailyRutine)





        response = web_page()
        conn.send('HTTP/1.1 200 OK\n')
        conn.send('Content-Type: text/html\n')
        conn.send('Connection: close\n\n')
        conn.sendall(response)
        conn.close()
